# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Estate Mapping API
  license:
    name: MIT
servers:
  - url: http://localhost:1323
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
  /estate:
    post:
      summary: Create a new estate
      operationId: createEstate
      requestBody:
        description: JSON payload to create a new estate
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - length
                - width
              properties:
                length:
                  type: integer
                  minimum: 1
                  maximum: 50000
                  x-oapi-codegen-extra-tags:
                    validate: "required,min=1,max=50000"
                  example: 10
                width:
                  type: integer
                  minimum: 1
                  maximum: 50000
                  x-oapi-codegen-extra-tags:
                    validate: "required,min=1,max=50000"
                  example: 5
      responses:
        '201':
          description: Estate created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEstateResponse"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
  /estate/{estate_id}/tree:
    post:
      summary: Create a tree for specific estate ID
      operationId: createTree
      parameters:
        - name: estate_id
          in: path
          required: true
          description: The Estate ID to refer which the new tree belongs to
          schema:
            type: string
            format: uuid
      requestBody:
        description: JSON payload to create a new estate
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - x
                - y
                - height
              properties:
                x:
                  type: integer
                  minimum: 1
                  maximum: 50000
                  x-oapi-codegen-extra-tags:
                    validate: "required,min=1,max=50000"
                  example: 10
                y:
                  type: integer
                  minimum: 1
                  maximum: 50000
                  x-oapi-codegen-extra-tags:
                    validate: "required,min=1,max=50000"
                  example: 5
                height:
                  type: integer
                  minimum: 1
                  maximum: 30
                  x-oapi-codegen-extra-tags:
                    validate: "required,min=1,max=30"
                  example: 2
      responses:
        '201':
          description: Tree created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTreeResponse"
        '404':
          description: Estate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
  /estate/{estate_id}/stats:
    get:
      summary: Get an estate stats
      operationId: getEstateStats
      parameters:
        - name: estate_id
          in: path
          required: true
          description: Estate ID which we want to get the stats
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEstateStatsResponse"
        '404':
          description: Estate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
  /estate/{estate_id}/drone-plan:
    get:
      summary: Get the sum distance of the drone monitoring travel in the estate
      operationId: getEstateDronePlan
      parameters:
        - name: estate_id
          in: path
          required: true
          description: Estate ID which we want to monitor with drone
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEstateDronePlanResponse"
        '404':
          description: Estate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: Hello, World!
    InternalServerErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: Oops, something wrong with the server. Please try again later
    InvalidInputErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: Invalid input
    NotFoundErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: Data not found
    CreateEstateResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    CreateTreeResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    GetEstateStatsResponse:
      type: object
      required:
        - count
        - max
        - min
        - median
      properties:
        count:
          type: integer
          example: 20
        max:
          type: integer
          example: 10
        min:
          type: integer
          example: 2
        median:
          type: integer
          example: 5
    GetEstateDronePlanResponse:
      type: object
      required:
        - distance
      properties:
        distance:
          type: integer
          example: 200
